# Create a new directory and enter it
md() {
  mkdir -p "$@" && cd "$@"
}

# Test if HTTP compression (RFC 2616 + SDCH) is enabled for a given URL.
# Send a fake UA string for sites that sniff it instead of using the Accept-Encoding header. (Looking at you, ajax.googleapis.com!)
httpcompression() {
  encoding="$(curl -LIs -H 'User-Agent: Mozilla/5 Gecko' -H 'Accept-Encoding: gzip,deflate,compress,sdch' "$1" | grep '^Content-Encoding:')" && echo "$1 is encoded using ${encoding#* }" || echo "$1 is not using any encoding"
}

# All the dig info
digga() {
  dig +nocmd "$1" any +multiline +noall +answer
}

# View man page as PDF
# Try Skim, then Preview, then behave like plain old man if you can't find a PDF viewer
pman() {
	if [[ -e "/Applications/Skim.app" ]]; then
		PDFVIEWER="/Applications/Skim.app"
	else if [[ -e "/Applications/Preview.app" ]]; then
		PDFVIEWER="/Applications/Preview.app"
	else
		man "${1}"
		exit
	fi
	fi

	man -t "${1}" | open -f -a ${PDFVIEWER}
}

airportcycle() {
	wifi=`networksetup -listallhardwareports | grep -A1 Wi-Fi | awk '{print $2}' | tail -n1`
	networksetup -setairportpower $wifi off
	networksetup -setairportpower $wifi on
}

ql() {
	qlmanage -p "$@" >& /dev/null &
}

resolver() {
  case "$#" in
    0) while read message; do perl -MSocket -pe 's/(\d+\.\d+\.\d+\.\d+)/gethostbyaddr(inet_aton($1), AF_INET)/ge'; done;;
    *) perl -MSocket -pe 's/(\d+\.\d+\.\d+\.\d+)/gethostbyaddr(inet_aton($1), AF_INET)/ge'  "$1";;
  esac
}

bug() {
  open "https://fb.wgen.net/?$1"
}

digttl() {
  HOME=/dev/null
  query="$1"
  domain="$(echo "$query" | awk -F. '{print $(NF-1) "." $NF}')"
  authority="$(dig +short ns "$domain" | head -n1)"
  ttl="$(dig +nocmd +noall +answer "$query" @"$authority" | head -n1)"
  echo "$ttl" | awk '{print $2}'
}

apkname() {
    aapt dump badging "$1" | awk -F\' '/^package/ {print $2}'
}
